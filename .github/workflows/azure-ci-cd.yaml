name: Azure App Service CI/CD with MLOps

on:
  push:
    branches:
      - main  # Trigger workflow when pushing to 'main'

permissions:
  id-token: write  # Needed for OIDC Authentication
  contents: read

env:
  DOCKER_IMAGE: your-dockerhub-username/fastapi-mlops:latest
  ML_THRESHOLD: 0.80  # Accuracy threshold for retraining

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        run: |
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login (Using OpenID Connect)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: "fastapi-mlops"  # Your Azure Web App Name
          images: $DOCKER_IMAGE

  retrain:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check Model Accuracy via Prometheus
        run: |
          ACCURACY=$(curl -s http://fastapi-mlops.azurewebsites.net/metrics | grep "model_accuracy" | awk '{print $2}')
          echo "Current Model Accuracy: $ACCURACY"
          if (( $(echo "$ACCURACY < $ML_THRESHOLD" | bc -l) )); then
            echo "Model drift detected! Retraining..."
            python train_model.py
            echo "Retrained successfully."
          else
            echo "Model is stable. No retraining required."
          fi
